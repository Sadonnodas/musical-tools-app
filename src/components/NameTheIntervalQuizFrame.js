import React from 'react';

const NameTheIntervalQuizFrame = () => (
    <div className="w-full h-[80vh] flex justify-center items-center">
      <iframe
        srcDoc={`<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Name The Interval Quiz</title>
    <!-- Tailwind CSS and Google Fonts -->
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet">
    <style>
        body { font-family: 'Inter', sans-serif; background-color: #1a202c; color: #e2e8f0; display: flex; justify-content: center; align-items: center; min-height: 100vh; margin: 0; padding: 20px; box-sizing: border-box; }
        .container { background-color: #2d3748; border-radius: 1rem; padding: 2rem; box-shadow: 0 10px 15px rgba(0, 0, 0, 0.2); text-align: center; width: 100%; max-width: 500px; min-height: 500px; }
        button { background-color: #4299e1; color: white; padding: 0.75rem 1.5rem; border-radius: 0.5rem; font-weight: bold; transition: background-color 0.3s ease, transform 0.1s ease; cursor: pointer; border: none; }
        button:hover { background-color: #3182ce; transform: translateY(-2px); }
        button:active { transform: translateY(0); }
        button:disabled { background-color: #4a5568; cursor: not-allowed; transform: translateY(0); box-shadow: none; }
        .feedback { margin-top: 1rem; font-weight: bold; min-height: 24px; }
        .feedback.correct { color: #48bb78; }
        .feedback.incorrect { color: #f56565; }
        .note-display { font-size: 3.5rem; margin-bottom: 1.5rem; font-weight: bold; color: #a0aec0; }
        .score-display { margin-top: 1.5rem; font-size: 1.25rem; color: #cbd5e0; }
        .answer-buttons { display: grid; grid-template-columns: 1fr 1fr; gap: 1rem; margin-top: 1.5rem; width: 100%; }
    </style>
</head>
<body>
    <div class="container flex flex-col items-center justify-center">
        <h1 class="text-3xl font-extrabold mb-6 text-indigo-300">Name The Interval Quiz</h1>
        
        <div id="quiz-screen" class="flex flex-col items-center w-full">
            <div class="note-display" id="notes-display">C → G</div>
            <div id="feedback-message" class="feedback"></div>
            <div id="answer-buttons" class="answer-buttons">
                <!-- Answer buttons will be generated by script -->
            </div>
            <button id="next-button" class="bg-gray-600 hover:bg-gray-700 shadow-lg hover:shadow-xl mt-6">Next Question</button>
            <div class="score-display">
                Score: <span id="correct-score">0</span> / <span id="total-questions">0</span>
            </div>
        </div>
    </div>

    <script>
        // DOM Elements
        const notesDisplay = document.getElementById('notes-display');
        const answerButtonsContainer = document.getElementById('answer-buttons');
        const nextButton = document.getElementById('next-button');
        const feedbackMessage = document.getElementById('feedback-message');
        const correctScoreSpan = document.getElementById('correct-score');
        const totalQuestionsSpan = document.getElementById('total-questions');

        // Musical data
        const intervals = {
            'Major Third': { semitones: 4, map: {'C': 'E', 'F': 'A', 'G': 'B'} },
            'Perfect Fourth': { semitones: 5, map: {'C': 'F', 'D': 'G', 'E': 'A', 'F': 'Bb', 'G': 'C', 'A': 'D', 'B': 'E'} },
            'Perfect Fifth': { semitones: 7, map: {'C': 'G', 'D': 'A', 'E': 'B', 'F': 'C', 'G': 'D', 'A': 'E', 'B': 'F#'} },
            'Major Sixth': { semitones: 9, map: {'C': 'A', 'D': 'B', 'G': 'E'} },
        };
        const intervalNames = Object.keys(intervals);

        let currentCorrectAnswer = '';
        let correctAnswers = 0;
        let totalQuestions = 0;
        let answerChecked = false;

        function generateNewQuestion() {
            answerChecked = false;
            feedbackMessage.textContent = '';
            feedbackMessage.className = 'feedback';
            
            // 1. Pick a random interval
            const correctIntervalIndex = Math.floor(Math.random() * intervalNames.length);
            currentCorrectAnswer = intervalNames[correctIntervalIndex];
            const intervalData = intervals[currentCorrectAnswer];
            const possibleRoots = Object.keys(intervalData.map);
            
            // 2. Pick a random root note for that interval
            const rootNoteIndex = Math.floor(Math.random() * possibleRoots.length);
            const rootNote = possibleRoots[rootNoteIndex];
            const targetNote = intervalData.map[rootNote];
            
            notesDisplay.textContent = rootNote + ' → ' + targetNote;
            
            // 3. Create answer choices (one correct, others wrong)
            let answerChoices = [currentCorrectAnswer];
            while (answerChoices.length < 4) {
                const randomWrongAnswer = intervalNames[Math.floor(Math.random() * intervalNames.length)];
                if (!answerChoices.includes(randomWrongAnswer)) {
                    answerChoices.push(randomWrongAnswer);
                }
            }
            
            // Shuffle the choices
            answerChoices.sort(() => Math.random() - 0.5);
            
            // 4. Create and display buttons
            answerButtonsContainer.innerHTML = '';
            answerChoices.forEach(choice => {
                const button = document.createElement('button');
                button.textContent = choice;
                button.onclick = () => checkAnswer(choice);
                answerButtonsContainer.appendChild(button);
            });
            
            totalQuestions++;
            updateScoreDisplay();
        }

        function checkAnswer(userAnswer) {
            if (answerChecked) return; // Prevent multiple clicks
            answerChecked = true;

            if (userAnswer === currentCorrectAnswer) {
                feedbackMessage.textContent = 'Correct!';
                feedbackMessage.classList.add('correct');
                correctAnswers++;
            } else {
                feedbackMessage.textContent = 'Incorrect. It was a ' + currentCorrectAnswer;
                feedbackMessage.classList.add('incorrect');
            }
            
            // Disable all buttons after answering
            Array.from(answerButtonsContainer.children).forEach(button => {
                button.disabled = true;
                if (button.textContent === currentCorrectAnswer) {
                   button.style.backgroundColor = '#48bb78'; // Highlight correct answer
                }
            });
            
            updateScoreDisplay();
        }

        function updateScoreDisplay() {
            correctScoreSpan.textContent = correctAnswers;
            totalQuestionsSpan.textContent = totalQuestions;
        }

        nextButton.addEventListener('click', generateNewQuestion);

        window.onload = generateNewQuestion;
    </script>
</body>
</html>`}
        title="Name The Interval Quiz"
        className="w-full h-full border-none rounded-xl shadow-lg"
      ></iframe>
    </div>
);

export default NameTheIntervalQuizFrame;
